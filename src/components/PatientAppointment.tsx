import { setHeaderData } from "@/utils/redux/slices/headerSlice";
import { AppDispatch } from "@/utils/redux/store";
import { AppointmentData, tableResponse } from "@/utils/StaticData";
import { Patient } from "@/utils/types/interfaces";
import { ColumnDef } from "@tanstack/react-table";
import { useEffect, useState } from "react";
import { useDispatch } from "react-redux";
import BaseTable from "@/components/ui/BaseTable";
import uploadIcon from "@/assets/images/upload-icon-table.png";
import ViewIcon from "@/assets/images/view-icon-table.png";
import fileIcon from "@/assets/images/file-icon-table.png";
import dotsIcon from "../assets/images/three-dot-icon-table.png"
import Image from "next/image";

const columns: ColumnDef<Patient>[] = [
    {
        header: "#",
        accessorKey: "id",
    },
    {
        header: "Reason",
        accessorKey: "reason",
    },
    {
        header: "Date",
        accessorKey: "date",
    },
    {
        header: "Time",
        accessorKey: "time",
    },
    {
        header: "Payment",
        accessorKey: "payment",
        cell: (info) => {
            const payment = info.getValue() as string;
            return (
                <span
                    className={` ${payment === "Pending"
                        ? "patient-journey-badge-pending"
                        : payment === "Done"
                        && "patient-journey-badge-success"

                        }`}
                >
                    {payment}
                </span>
            );
        },
    },
    {
        header: "Status",
        accessorKey: "status",
        cell: (info) => {
            const status = info.getValue() as string;
            return (
                <span
                    className={` ${status === "Upcoming"
                        ? "patient-journey-badge-InProgress"
                        : status === "Completed"
                        && "patient-journey-badge-success"

                        }`}
                >
                    {status}
                </span>
            );
        },
    },
    {
        header: "Prescription",
        accessorKey: "prescription",
        cell: (info) => {
            const prescription = info.getValue() as string;
            return (
                <>
                    {prescription === "N/A" && <span>{prescription}</span>}
                    {prescription === "file" && <svg xmlns="http://www.w3.org/2000/svg" width="41" height="41" viewBox="0 0 41 41" fill="none">
                        <rect x="1.3457" y="1.44141" width="39" height="39" rx="7.5" fill="#2B4360" />
                        <rect x="1.3457" y="1.44141" width="39" height="39" rx="7.5" stroke="#2B4360" />
                        <path d="M28.3457 22.1919V27.1919C28.3457 27.3577 28.2799 27.5166 28.1626 27.6338C28.0454 27.7511 27.8865 27.8169 27.7207 27.8169H13.9707C13.8049 27.8169 13.646 27.7511 13.5288 27.6338C13.4116 27.5166 13.3457 27.3577 13.3457 27.1919V22.1919C13.3457 22.0261 13.4116 21.8672 13.5288 21.75C13.646 21.6327 13.8049 21.5669 13.9707 21.5669C14.1365 21.5669 14.2954 21.6327 14.4126 21.75C14.5299 21.8672 14.5957 22.0261 14.5957 22.1919V26.5669H27.0957V22.1919C27.0957 22.0261 27.1616 21.8672 27.2788 21.75C27.396 21.6327 27.5549 21.5669 27.7207 21.5669C27.8865 21.5669 28.0454 21.6327 28.1626 21.75C28.2799 21.8672 28.3457 22.0261 28.3457 22.1919ZM18.1629 17.0091L20.2207 14.9505V22.1919C20.2207 22.3577 20.2866 22.5166 20.4038 22.6338C20.521 22.7511 20.6799 22.8169 20.8457 22.8169C21.0115 22.8169 21.1704 22.7511 21.2876 22.6338C21.4049 22.5166 21.4707 22.3577 21.4707 22.1919V14.9505L23.5285 17.0091C23.6458 17.1264 23.8049 17.1922 23.9707 17.1922C24.1366 17.1922 24.2956 17.1264 24.4129 17.0091C24.5302 16.8918 24.5961 16.7328 24.5961 16.5669C24.5961 16.401 24.5302 16.242 24.4129 16.1247L21.2879 12.9997C21.2298 12.9416 21.1609 12.8955 21.085 12.864C21.0092 12.8326 20.9278 12.8164 20.8457 12.8164C20.7636 12.8164 20.6822 12.8326 20.6064 12.864C20.5305 12.8955 20.4616 12.9416 20.4035 12.9997L17.2785 16.1247C17.1612 16.242 17.0954 16.401 17.0954 16.5669C17.0954 16.7328 17.1612 16.8918 17.2785 17.0091C17.3958 17.1264 17.5549 17.1922 17.7207 17.1922C17.8866 17.1922 18.0456 17.1264 18.1629 17.0091Z" fill="white" />
                    </svg>}
                    {prescription === "viewfile" && <svg xmlns="http://www.w3.org/2000/svg" width="41" height="41" viewBox="0 0 41 41" fill="none">
                        <rect x="1.3457" y="1.44141" width="39" height="39" rx="7.5" fill="white" />
                        <rect x="1.3457" y="1.44141" width="39" height="39" rx="7.5" stroke="#DDE1E8" />
                        <path d="M30.1668 20.6883C30.1394 20.6266 29.4777 19.1586 28.0066 17.6875C26.0465 15.7273 23.5707 14.6914 20.8457 14.6914C18.1207 14.6914 15.6449 15.7273 13.6848 17.6875C12.2137 19.1586 11.5488 20.6289 11.5246 20.6883C11.4891 20.7682 11.4707 20.8547 11.4707 20.9422C11.4707 21.0297 11.4891 21.1162 11.5246 21.1961C11.5519 21.2578 12.2137 22.725 13.6848 24.1961C15.6449 26.1555 18.1207 27.1914 20.8457 27.1914C23.5707 27.1914 26.0465 26.1555 28.0066 24.1961C29.4777 22.725 30.1394 21.2578 30.1668 21.1961C30.2023 21.1162 30.2207 21.0297 30.2207 20.9422C30.2207 20.8547 30.2023 20.7682 30.1668 20.6883ZM20.8457 25.9414C18.441 25.9414 16.3402 25.0672 14.6012 23.3438C13.8876 22.6341 13.2805 21.825 12.7988 20.9414C13.2804 20.0578 13.8875 19.2486 14.6012 18.5391C16.3402 16.8156 18.441 15.9414 20.8457 15.9414C23.2504 15.9414 25.3512 16.8156 27.0902 18.5391C27.8052 19.2484 28.4136 20.0576 28.8965 20.9414C28.3332 21.993 25.8793 25.9414 20.8457 25.9414ZM20.8457 17.1914C20.104 17.1914 19.379 17.4113 18.7623 17.8234C18.1456 18.2355 17.665 18.8211 17.3811 19.5063C17.0973 20.1916 17.0231 20.9456 17.1678 21.673C17.3124 22.4004 17.6696 23.0686 18.194 23.5931C18.7185 24.1175 19.3867 24.4747 20.1141 24.6194C20.8415 24.764 21.5955 24.6898 22.2808 24.406C22.966 24.1221 23.5517 23.6415 23.9637 23.0248C24.3758 22.4081 24.5957 21.6831 24.5957 20.9414C24.5947 19.9472 24.1992 18.9939 23.4962 18.2909C22.7932 17.5879 21.8399 17.1924 20.8457 17.1914ZM20.8457 23.4414C20.3512 23.4414 19.8679 23.2948 19.4568 23.0201C19.0456 22.7454 18.7252 22.3549 18.536 21.8981C18.3468 21.4413 18.2973 20.9386 18.3937 20.4537C18.4902 19.9687 18.7283 19.5233 19.0779 19.1736C19.4276 18.824 19.873 18.5859 20.358 18.4894C20.8429 18.393 21.3456 18.4425 21.8024 18.6317C22.2592 18.8209 22.6497 19.1414 22.9244 19.5525C23.1991 19.9636 23.3457 20.447 23.3457 20.9414C23.3457 21.6044 23.0823 22.2403 22.6135 22.7092C22.1446 23.178 21.5087 23.4414 20.8457 23.4414Z" fill="#2B4360" />
                    </svg>}
                </>

            );
        },
    },
    {
        header: "Invoice",
        accessorKey: "invoice",
        cell: (info) => {
            const Invoice = info.getValue() as string;
            return (
                <>
                    {Invoice === "N/A" && <span>{Invoice}</span>}
                    {Invoice === "file" && <svg xmlns="http://www.w3.org/2000/svg" width="41" height="41" viewBox="0 0 41 41" fill="none">
                        <rect x="1.3457" y="1.44141" width="39" height="39" rx="7.5" fill="#2B4360" />
                        <rect x="1.3457" y="1.44141" width="39" height="39" rx="7.5" stroke="#2B4360" />
                        <path d="M28.3457 22.1919V27.1919C28.3457 27.3577 28.2799 27.5166 28.1626 27.6338C28.0454 27.7511 27.8865 27.8169 27.7207 27.8169H13.9707C13.8049 27.8169 13.646 27.7511 13.5288 27.6338C13.4116 27.5166 13.3457 27.3577 13.3457 27.1919V22.1919C13.3457 22.0261 13.4116 21.8672 13.5288 21.75C13.646 21.6327 13.8049 21.5669 13.9707 21.5669C14.1365 21.5669 14.2954 21.6327 14.4126 21.75C14.5299 21.8672 14.5957 22.0261 14.5957 22.1919V26.5669H27.0957V22.1919C27.0957 22.0261 27.1616 21.8672 27.2788 21.75C27.396 21.6327 27.5549 21.5669 27.7207 21.5669C27.8865 21.5669 28.0454 21.6327 28.1626 21.75C28.2799 21.8672 28.3457 22.0261 28.3457 22.1919ZM18.1629 17.0091L20.2207 14.9505V22.1919C20.2207 22.3577 20.2866 22.5166 20.4038 22.6338C20.521 22.7511 20.6799 22.8169 20.8457 22.8169C21.0115 22.8169 21.1704 22.7511 21.2876 22.6338C21.4049 22.5166 21.4707 22.3577 21.4707 22.1919V14.9505L23.5285 17.0091C23.6458 17.1264 23.8049 17.1922 23.9707 17.1922C24.1366 17.1922 24.2956 17.1264 24.4129 17.0091C24.5302 16.8918 24.5961 16.7328 24.5961 16.5669C24.5961 16.401 24.5302 16.242 24.4129 16.1247L21.2879 12.9997C21.2298 12.9416 21.1609 12.8955 21.085 12.864C21.0092 12.8326 20.9278 12.8164 20.8457 12.8164C20.7636 12.8164 20.6822 12.8326 20.6064 12.864C20.5305 12.8955 20.4616 12.9416 20.4035 12.9997L17.2785 16.1247C17.1612 16.242 17.0954 16.401 17.0954 16.5669C17.0954 16.7328 17.1612 16.8918 17.2785 17.0091C17.3958 17.1264 17.5549 17.1922 17.7207 17.1922C17.8866 17.1922 18.0456 17.1264 18.1629 17.0091Z" fill="white" />
                    </svg>}
                    {Invoice === "viewfile" && <svg xmlns="http://www.w3.org/2000/svg" width="41" height="41" viewBox="0 0 41 41" fill="none">
                        <rect x="1.05994" y="1.44141" width="39" height="39" rx="7.5" fill="white" />
                        <rect x="1.05994" y="1.44141" width="39" height="39" rx="7.5" stroke="#DDE1E8" />
                        <path d="M17.4349 18.4414C17.4349 18.2756 17.5008 18.1167 17.618 17.9995C17.7352 17.8823 17.8942 17.8164 18.0599 17.8164H23.0599C23.2257 17.8164 23.3847 17.8823 23.5019 17.9995C23.6191 18.1167 23.6849 18.2756 23.6849 18.4414C23.6849 18.6072 23.6191 18.7661 23.5019 18.8833C23.3847 19.0006 23.2257 19.0664 23.0599 19.0664H18.0599C17.8942 19.0664 17.7352 19.0006 17.618 18.8833C17.5008 18.7661 17.4349 18.6072 17.4349 18.4414ZM18.0599 21.5664H23.0599C23.2257 21.5664 23.3847 21.5006 23.5019 21.3833C23.6191 21.2661 23.6849 21.1072 23.6849 20.9414C23.6849 20.7756 23.6191 20.6167 23.5019 20.4995C23.3847 20.3823 23.2257 20.3164 23.0599 20.3164H18.0599C17.8942 20.3164 17.7352 20.3823 17.618 20.4995C17.5008 20.6167 17.4349 20.7756 17.4349 20.9414C17.4349 21.1072 17.5008 21.2661 17.618 21.3833C17.7352 21.5006 17.8942 21.5664 18.0599 21.5664ZM20.5599 22.8164H18.0599C17.8942 22.8164 17.7352 22.8823 17.618 22.9995C17.5008 23.1167 17.4349 23.2756 17.4349 23.4414C17.4349 23.6072 17.5008 23.7661 17.618 23.8833C17.7352 24.0006 17.8942 24.0664 18.0599 24.0664H20.5599C20.7257 24.0664 20.8847 24.0006 21.0019 23.8833C21.1191 23.7661 21.1849 23.6072 21.1849 23.4414C21.1849 23.2756 21.1191 23.1167 21.0019 22.9995C20.8847 22.8823 20.7257 22.8164 20.5599 22.8164ZM28.0599 14.6914V23.1828C28.0605 23.347 28.0283 23.5097 27.9654 23.6614C27.9025 23.8131 27.8101 23.9508 27.6935 24.0664L23.6849 28.075C23.5693 28.1916 23.4316 28.284 23.2799 28.3469C23.1282 28.4098 22.9656 28.4419 22.8013 28.4414H14.3099C13.9784 28.4414 13.6605 28.3097 13.4261 28.0753C13.1916 27.8409 13.0599 27.5229 13.0599 27.1914V14.6914C13.0599 14.3599 13.1916 14.0419 13.4261 13.8075C13.6605 13.5731 13.9784 13.4414 14.3099 13.4414H26.8099C27.1415 13.4414 27.4594 13.5731 27.6938 13.8075C27.9282 14.0419 28.0599 14.3599 28.0599 14.6914ZM14.3099 27.1914H22.4349V23.4414C22.4349 23.2756 22.5008 23.1167 22.618 22.9995C22.7352 22.8823 22.8942 22.8164 23.0599 22.8164H26.8099V14.6914H14.3099V27.1914ZM23.6849 24.0664V26.3086L25.9263 24.0664H23.6849Z" fill="#2B4360" />
                    </svg>}
                </>

            );
        },
    },
    {
        header: "Actions",
        accessorKey: "actions",
        cell: (info) => {
            const Actions = info.getValue() as string;
            return (
                <>
                    {Actions === "View" && <Image src={dotsIcon} width={40} height={40} alt="ViewIcon" />}
                </>

            );
        },
    },
];

const PatientAppointment = () => {

    const dispatch: AppDispatch = useDispatch();
    const [tableData, setTableData] = useState<any>([]);
    const [loading, setLoading] = useState(false);
    useEffect(() => {
        setLoading(true);
        dispatch(
            setHeaderData({
                title: "Sample Page",
                subtitle: "Sample Page for check common components",
            })
        );
        setTableData(AppointmentData);
        setLoading(false);
    }, []);

    return (
        <div>
            <BaseTable data={tableData} columns={columns} />

        </div>
    );
};

export default PatientAppointment;