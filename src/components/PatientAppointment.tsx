import { setHeaderData } from "@/utils/redux/slices/headerSlice";
import { AppDispatch } from "@/utils/redux/store";
import { AppointmentData, tableResponse } from "@/utils/StaticData";
import { Patient } from "@/utils/types/interfaces";
import { ColumnDef } from "@tanstack/react-table";
import { ChangeEvent, useEffect, useState } from "react";
import { useDispatch } from "react-redux";
import BaseTable from "@/components/ui/BaseTable";
import uploadIcon from "@/assets/images/upload-icon-table.png";
import ViewIcon from "@/assets/images/view-icon-table.png";
import fileIcon from "@/assets/images/file-icon-table.png";
import dotsIcon from "../assets/images/three-dot-icon-table.png"
import Image from "next/image";
import { InputFieldGroup } from "./ui/InputField";
import {InputSelect} from "./ui/InputSelect";
import Button from "./ui/Button";
import Modal from "./ui/Modal";
import { BookAppointment, SuccessModalBookAppointment } from "./form/BookAppointment";

const columns: ColumnDef<Patient>[] = [
    {
        header: "#",
        accessorKey: "id",
    },
    {
        header: "Reason",
        accessorKey: "reason",
    },
    {
        header: "Date",
        accessorKey: "date",
    },
    {
        header: "Time",
        accessorKey: "time",
    },
    {
        header: "Payment",
        accessorKey: "payment",
        cell: (info) => {
            const payment = info.getValue() as string;
            return (
                <span
                    className={` ${payment === "Pending"
                        ? "patient-journey-badge-pending"
                        : payment === "Done"
                        && "patient-journey-badge-success"

                        }`}
                >
                    {payment}
                </span>
            );
        },
    },
    {
        header: "Status",
        accessorKey: "status",
        cell: (info) => {
            const status = info.getValue() as string;
            return (
                <span
                    className={` ${status === "Upcoming"
                        ? "patient-journey-badge-InProgress"
                        : status === "Completed"
                        && "patient-journey-badge-success"

                        }`}
                >
                    {status}
                </span>
            );
        },
    },
    {
        header: "Prescription",
        accessorKey: "prescription",
        cell: (info) => {
            const prescription = info.getValue() as string;
            return (
                <>
                    {prescription === "N/A" && <span>{prescription}</span>}
                    {prescription === "file" && <svg xmlns="http://www.w3.org/2000/svg" width="41" height="41" viewBox="0 0 41 41" fill="none">
                        <rect x="1.3457" y="1.44141" width="39" height="39" rx="7.5" fill="#2B4360" />
                        <rect x="1.3457" y="1.44141" width="39" height="39" rx="7.5" stroke="#2B4360" />
                        <path d="M28.3457 22.1919V27.1919C28.3457 27.3577 28.2799 27.5166 28.1626 27.6338C28.0454 27.7511 27.8865 27.8169 27.7207 27.8169H13.9707C13.8049 27.8169 13.646 27.7511 13.5288 27.6338C13.4116 27.5166 13.3457 27.3577 13.3457 27.1919V22.1919C13.3457 22.0261 13.4116 21.8672 13.5288 21.75C13.646 21.6327 13.8049 21.5669 13.9707 21.5669C14.1365 21.5669 14.2954 21.6327 14.4126 21.75C14.5299 21.8672 14.5957 22.0261 14.5957 22.1919V26.5669H27.0957V22.1919C27.0957 22.0261 27.1616 21.8672 27.2788 21.75C27.396 21.6327 27.5549 21.5669 27.7207 21.5669C27.8865 21.5669 28.0454 21.6327 28.1626 21.75C28.2799 21.8672 28.3457 22.0261 28.3457 22.1919ZM18.1629 17.0091L20.2207 14.9505V22.1919C20.2207 22.3577 20.2866 22.5166 20.4038 22.6338C20.521 22.7511 20.6799 22.8169 20.8457 22.8169C21.0115 22.8169 21.1704 22.7511 21.2876 22.6338C21.4049 22.5166 21.4707 22.3577 21.4707 22.1919V14.9505L23.5285 17.0091C23.6458 17.1264 23.8049 17.1922 23.9707 17.1922C24.1366 17.1922 24.2956 17.1264 24.4129 17.0091C24.5302 16.8918 24.5961 16.7328 24.5961 16.5669C24.5961 16.401 24.5302 16.242 24.4129 16.1247L21.2879 12.9997C21.2298 12.9416 21.1609 12.8955 21.085 12.864C21.0092 12.8326 20.9278 12.8164 20.8457 12.8164C20.7636 12.8164 20.6822 12.8326 20.6064 12.864C20.5305 12.8955 20.4616 12.9416 20.4035 12.9997L17.2785 16.1247C17.1612 16.242 17.0954 16.401 17.0954 16.5669C17.0954 16.7328 17.1612 16.8918 17.2785 17.0091C17.3958 17.1264 17.5549 17.1922 17.7207 17.1922C17.8866 17.1922 18.0456 17.1264 18.1629 17.0091Z" fill="white" />
                    </svg>}
                    {prescription === "viewfile" && <svg xmlns="http://www.w3.org/2000/svg" width="41" height="41" viewBox="0 0 41 41" fill="none">
                        <rect x="1.3457" y="1.44141" width="39" height="39" rx="7.5" fill="white" />
                        <rect x="1.3457" y="1.44141" width="39" height="39" rx="7.5" stroke="#DDE1E8" />
                        <path d="M30.1668 20.6883C30.1394 20.6266 29.4777 19.1586 28.0066 17.6875C26.0465 15.7273 23.5707 14.6914 20.8457 14.6914C18.1207 14.6914 15.6449 15.7273 13.6848 17.6875C12.2137 19.1586 11.5488 20.6289 11.5246 20.6883C11.4891 20.7682 11.4707 20.8547 11.4707 20.9422C11.4707 21.0297 11.4891 21.1162 11.5246 21.1961C11.5519 21.2578 12.2137 22.725 13.6848 24.1961C15.6449 26.1555 18.1207 27.1914 20.8457 27.1914C23.5707 27.1914 26.0465 26.1555 28.0066 24.1961C29.4777 22.725 30.1394 21.2578 30.1668 21.1961C30.2023 21.1162 30.2207 21.0297 30.2207 20.9422C30.2207 20.8547 30.2023 20.7682 30.1668 20.6883ZM20.8457 25.9414C18.441 25.9414 16.3402 25.0672 14.6012 23.3438C13.8876 22.6341 13.2805 21.825 12.7988 20.9414C13.2804 20.0578 13.8875 19.2486 14.6012 18.5391C16.3402 16.8156 18.441 15.9414 20.8457 15.9414C23.2504 15.9414 25.3512 16.8156 27.0902 18.5391C27.8052 19.2484 28.4136 20.0576 28.8965 20.9414C28.3332 21.993 25.8793 25.9414 20.8457 25.9414ZM20.8457 17.1914C20.104 17.1914 19.379 17.4113 18.7623 17.8234C18.1456 18.2355 17.665 18.8211 17.3811 19.5063C17.0973 20.1916 17.0231 20.9456 17.1678 21.673C17.3124 22.4004 17.6696 23.0686 18.194 23.5931C18.7185 24.1175 19.3867 24.4747 20.1141 24.6194C20.8415 24.764 21.5955 24.6898 22.2808 24.406C22.966 24.1221 23.5517 23.6415 23.9637 23.0248C24.3758 22.4081 24.5957 21.6831 24.5957 20.9414C24.5947 19.9472 24.1992 18.9939 23.4962 18.2909C22.7932 17.5879 21.8399 17.1924 20.8457 17.1914ZM20.8457 23.4414C20.3512 23.4414 19.8679 23.2948 19.4568 23.0201C19.0456 22.7454 18.7252 22.3549 18.536 21.8981C18.3468 21.4413 18.2973 20.9386 18.3937 20.4537C18.4902 19.9687 18.7283 19.5233 19.0779 19.1736C19.4276 18.824 19.873 18.5859 20.358 18.4894C20.8429 18.393 21.3456 18.4425 21.8024 18.6317C22.2592 18.8209 22.6497 19.1414 22.9244 19.5525C23.1991 19.9636 23.3457 20.447 23.3457 20.9414C23.3457 21.6044 23.0823 22.2403 22.6135 22.7092C22.1446 23.178 21.5087 23.4414 20.8457 23.4414Z" fill="#2B4360" />
                    </svg>}
                </>

            );
        },
    },
    {
        header: "Invoice",
        accessorKey: "invoice",
        cell: (info) => {
            const Invoice = info.getValue() as string;
            return (
                <>
                    {Invoice === "N/A" && <span>{Invoice}</span>}
                    {Invoice === "file" && <svg xmlns="http://www.w3.org/2000/svg" width="41" height="41" viewBox="0 0 41 41" fill="none">
                        <rect x="1.3457" y="1.44141" width="39" height="39" rx="7.5" fill="#2B4360" />
                        <rect x="1.3457" y="1.44141" width="39" height="39" rx="7.5" stroke="#2B4360" />
                        <path d="M28.3457 22.1919V27.1919C28.3457 27.3577 28.2799 27.5166 28.1626 27.6338C28.0454 27.7511 27.8865 27.8169 27.7207 27.8169H13.9707C13.8049 27.8169 13.646 27.7511 13.5288 27.6338C13.4116 27.5166 13.3457 27.3577 13.3457 27.1919V22.1919C13.3457 22.0261 13.4116 21.8672 13.5288 21.75C13.646 21.6327 13.8049 21.5669 13.9707 21.5669C14.1365 21.5669 14.2954 21.6327 14.4126 21.75C14.5299 21.8672 14.5957 22.0261 14.5957 22.1919V26.5669H27.0957V22.1919C27.0957 22.0261 27.1616 21.8672 27.2788 21.75C27.396 21.6327 27.5549 21.5669 27.7207 21.5669C27.8865 21.5669 28.0454 21.6327 28.1626 21.75C28.2799 21.8672 28.3457 22.0261 28.3457 22.1919ZM18.1629 17.0091L20.2207 14.9505V22.1919C20.2207 22.3577 20.2866 22.5166 20.4038 22.6338C20.521 22.7511 20.6799 22.8169 20.8457 22.8169C21.0115 22.8169 21.1704 22.7511 21.2876 22.6338C21.4049 22.5166 21.4707 22.3577 21.4707 22.1919V14.9505L23.5285 17.0091C23.6458 17.1264 23.8049 17.1922 23.9707 17.1922C24.1366 17.1922 24.2956 17.1264 24.4129 17.0091C24.5302 16.8918 24.5961 16.7328 24.5961 16.5669C24.5961 16.401 24.5302 16.242 24.4129 16.1247L21.2879 12.9997C21.2298 12.9416 21.1609 12.8955 21.085 12.864C21.0092 12.8326 20.9278 12.8164 20.8457 12.8164C20.7636 12.8164 20.6822 12.8326 20.6064 12.864C20.5305 12.8955 20.4616 12.9416 20.4035 12.9997L17.2785 16.1247C17.1612 16.242 17.0954 16.401 17.0954 16.5669C17.0954 16.7328 17.1612 16.8918 17.2785 17.0091C17.3958 17.1264 17.5549 17.1922 17.7207 17.1922C17.8866 17.1922 18.0456 17.1264 18.1629 17.0091Z" fill="white" />
                    </svg>}
                    {Invoice === "viewfile" && <svg xmlns="http://www.w3.org/2000/svg" width="41" height="41" viewBox="0 0 41 41" fill="none">
                        <rect x="1.05994" y="1.44141" width="39" height="39" rx="7.5" fill="white" />
                        <rect x="1.05994" y="1.44141" width="39" height="39" rx="7.5" stroke="#DDE1E8" />
                        <path d="M17.4349 18.4414C17.4349 18.2756 17.5008 18.1167 17.618 17.9995C17.7352 17.8823 17.8942 17.8164 18.0599 17.8164H23.0599C23.2257 17.8164 23.3847 17.8823 23.5019 17.9995C23.6191 18.1167 23.6849 18.2756 23.6849 18.4414C23.6849 18.6072 23.6191 18.7661 23.5019 18.8833C23.3847 19.0006 23.2257 19.0664 23.0599 19.0664H18.0599C17.8942 19.0664 17.7352 19.0006 17.618 18.8833C17.5008 18.7661 17.4349 18.6072 17.4349 18.4414ZM18.0599 21.5664H23.0599C23.2257 21.5664 23.3847 21.5006 23.5019 21.3833C23.6191 21.2661 23.6849 21.1072 23.6849 20.9414C23.6849 20.7756 23.6191 20.6167 23.5019 20.4995C23.3847 20.3823 23.2257 20.3164 23.0599 20.3164H18.0599C17.8942 20.3164 17.7352 20.3823 17.618 20.4995C17.5008 20.6167 17.4349 20.7756 17.4349 20.9414C17.4349 21.1072 17.5008 21.2661 17.618 21.3833C17.7352 21.5006 17.8942 21.5664 18.0599 21.5664ZM20.5599 22.8164H18.0599C17.8942 22.8164 17.7352 22.8823 17.618 22.9995C17.5008 23.1167 17.4349 23.2756 17.4349 23.4414C17.4349 23.6072 17.5008 23.7661 17.618 23.8833C17.7352 24.0006 17.8942 24.0664 18.0599 24.0664H20.5599C20.7257 24.0664 20.8847 24.0006 21.0019 23.8833C21.1191 23.7661 21.1849 23.6072 21.1849 23.4414C21.1849 23.2756 21.1191 23.1167 21.0019 22.9995C20.8847 22.8823 20.7257 22.8164 20.5599 22.8164ZM28.0599 14.6914V23.1828C28.0605 23.347 28.0283 23.5097 27.9654 23.6614C27.9025 23.8131 27.8101 23.9508 27.6935 24.0664L23.6849 28.075C23.5693 28.1916 23.4316 28.284 23.2799 28.3469C23.1282 28.4098 22.9656 28.4419 22.8013 28.4414H14.3099C13.9784 28.4414 13.6605 28.3097 13.4261 28.0753C13.1916 27.8409 13.0599 27.5229 13.0599 27.1914V14.6914C13.0599 14.3599 13.1916 14.0419 13.4261 13.8075C13.6605 13.5731 13.9784 13.4414 14.3099 13.4414H26.8099C27.1415 13.4414 27.4594 13.5731 27.6938 13.8075C27.9282 14.0419 28.0599 14.3599 28.0599 14.6914ZM14.3099 27.1914H22.4349V23.4414C22.4349 23.2756 22.5008 23.1167 22.618 22.9995C22.7352 22.8823 22.8942 22.8164 23.0599 22.8164H26.8099V14.6914H14.3099V27.1914ZM23.6849 24.0664V26.3086L25.9263 24.0664H23.6849Z" fill="#2B4360" />
                    </svg>}
                </>

            );
        },
    },
    {
        header: "Actions",
        accessorKey: "actions",
        cell: (info) => {
            const Actions = info.getValue() as string;
            return (
                <>
                    {Actions === "View" && <Image src={dotsIcon} width={40} height={40} alt="ViewIcon" />}
                </>

            );
        },
    },
];

const PatientAppointment = () => {

    const dispatch: AppDispatch = useDispatch();
    const [tableData, setTableData] = useState<any>([]);
    const [loading, setLoading] = useState(false);

    const [BookAppointmentModal, setBookAppointmentModal] = useState(false);
    const [showSuccessModalBook, setShowSuccessModalBook] = useState(false);

    useEffect(() => {
        setLoading(true);
        dispatch(
            setHeaderData({
                title: "Sample Page",
                subtitle: "Sample Page for check common components",
            })
        );
        setTableData(AppointmentData);
        setLoading(false);
    }, []);

    const handleChange = (
        e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>
    ) => {
        const { name, value } = e.target;

        // setFormData((prev) => ({
        //     ...prev,
        //     [name]: value,
        // }));
        // setFormError((prev) => ({ ...prev, [name]: "" }));
    };

    return (
        <>
            <div className="d-md-flex d-sm-none justify-content-between  mb-4">
                <InputFieldGroup
                    name="search"
                    type="text"
                    // value={formData.name}
                    // onChange={(e: React.ChangeEvent<HTMLInputElement>) => {
                    //     setSearchTerm(e.target.value); /
                    // }}
                    onBlur={(e: React.FocusEvent<HTMLInputElement>) => { }}
                    placeholder="search"
                    required={false}
                    disabled={false}
                    readOnly={false}
                    // error={formError.name}
                    className="position-relative blood-test-search patient-header-search patient-header-search-width "
                >
                    <div className="blood-test-search-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" width="21" height="20" viewBox="0 0 21 20" fill="none">
                            <path d="M18.5677 16.8364L14.8576 13.1246C15.97 11.675 16.4893 9.85652 16.3103 8.03804C16.1312 6.21956 15.2672 4.53728 13.8934 3.33245C12.5196 2.12762 10.7389 1.49047 8.91264 1.55024C7.08635 1.61001 5.35117 2.36223 4.05909 3.65431C2.76702 4.94638 2.0148 6.68156 1.95503 8.50785C1.89526 10.3341 2.53241 12.1148 3.73724 13.4886C4.94207 14.8624 6.62435 15.7264 8.44283 15.9055C10.2613 16.0846 12.0798 15.5652 13.5294 14.4528L17.2427 18.1668C17.3299 18.254 17.4335 18.3232 17.5474 18.3704C17.6613 18.4176 17.7835 18.4419 17.9068 18.4419C18.0301 18.4419 18.1522 18.4176 18.2662 18.3704C18.3801 18.3232 18.4836 18.254 18.5708 18.1668C18.658 18.0796 18.7272 17.9761 18.7744 17.8622C18.8216 17.7482 18.8459 17.6261 18.8459 17.5028C18.8459 17.3794 18.8216 17.2573 18.7744 17.1434C18.7272 17.0294 18.658 16.9259 18.5708 16.8387L18.5677 16.8364ZM3.84193 8.74965C3.84193 7.69894 4.15351 6.67182 4.73725 5.79818C5.321 4.92455 6.1507 4.24363 7.12143 3.84154C8.09216 3.43945 9.16033 3.33424 10.1909 3.53923C11.2214 3.74421 12.168 4.25018 12.9109 4.99314C13.6539 5.73611 14.1599 6.68271 14.3649 7.71323C14.5698 8.74376 14.4646 9.81192 14.0625 10.7827C13.6605 11.7534 12.9795 12.5831 12.1059 13.1668C11.2323 13.7506 10.2051 14.0621 9.15444 14.0621C7.74592 14.0607 6.3955 13.5005 5.39953 12.5046C4.40356 11.5086 3.84338 10.1582 3.84193 8.74965Z" fill="#B0B4C1" />
                        </svg>
                    </div>
                </InputFieldGroup>

                <div className="d-flex flex-sm-row align-items-center gap-sm-3 gap-2 flex-column flex-column-revserse mt-sm-0 mt-2">
                    <div className="d-flex align-items-center gap-2">

                        <span className="sort-by-lable">Sort by:</span>
                        <InputSelect
                            label=""
                            name="tests"
                            // value={formData.tests}
                            onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {
                                handleChange(e);
                            }}
                            onBlur={(e: React.FocusEvent<HTMLSelectElement>) => { }}
                            required={true}
                            disabled={false}
                            placeholder="All Time"
                            className="patient-header-select-filter "
                            // error={formError.tests}
                            options={[
                                { id: "1", value: "Today", label: "Today" },
                                { id: "2", value: "Yesterday", label: "Yesterday" },
                                { id: "3", value: "tomorrow", label: "tomorrow" },
                            ]}
                        />
                        <div className="patient-header-filter-icon-box ">
                            <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 25 25" fill="none">
                                <path d="M6.30166 10.6484V4.55469C6.30166 4.35578 6.22264 4.16501 6.08199 4.02436C5.94134 3.88371 5.75057 3.80469 5.55166 3.80469C5.35275 3.80469 5.16198 3.88371 5.02133 4.02436C4.88068 4.16501 4.80166 4.35578 4.80166 4.55469V10.6484C4.15635 10.8137 3.58438 11.189 3.17593 11.7152C2.76748 12.2414 2.54578 12.8886 2.54578 13.5547C2.54578 14.2208 2.76748 14.868 3.17593 15.3942C3.58438 15.9204 4.15635 16.2957 4.80166 16.4609V21.0547C4.80166 21.2536 4.88068 21.4444 5.02133 21.585C5.16198 21.7257 5.35275 21.8047 5.55166 21.8047C5.75057 21.8047 5.94134 21.7257 6.08199 21.585C6.22264 21.4444 6.30166 21.2536 6.30166 21.0547V16.4609C6.94697 16.2957 7.51894 15.9204 7.92739 15.3942C8.33584 14.868 8.55754 14.2208 8.55754 13.5547C8.55754 12.8886 8.33584 12.2414 7.92739 11.7152C7.51894 11.189 6.94697 10.8137 6.30166 10.6484ZM5.55166 15.0547C5.25499 15.0547 4.96498 14.9667 4.7183 14.8019C4.47163 14.6371 4.27937 14.4028 4.16584 14.1287C4.05231 13.8546 4.0226 13.553 4.08048 13.2621C4.13836 12.9711 4.28122 12.7038 4.491 12.494C4.70078 12.2842 4.96805 12.1414 5.25902 12.0835C5.54999 12.0256 5.8516 12.0553 6.12568 12.1689C6.39977 12.2824 6.63404 12.4747 6.79886 12.7213C6.96369 12.968 7.05166 13.258 7.05166 13.5547C7.05166 13.9525 6.89362 14.334 6.61232 14.6153C6.33101 14.8967 5.94948 15.0547 5.55166 15.0547ZM13.0517 6.14844V4.55469C13.0517 4.35578 12.9726 4.16501 12.832 4.02436C12.6913 3.88371 12.5006 3.80469 12.3017 3.80469C12.1027 3.80469 11.912 3.88371 11.7713 4.02436C11.6307 4.16501 11.5517 4.35578 11.5517 4.55469V6.14844C10.9063 6.31366 10.3344 6.68896 9.92593 7.21517C9.51748 7.74138 9.29578 8.38856 9.29578 9.05469C9.29578 9.72082 9.51748 10.368 9.92593 10.8942C10.3344 11.4204 10.9063 11.7957 11.5517 11.9609V21.0547C11.5517 21.2536 11.6307 21.4444 11.7713 21.585C11.912 21.7257 12.1027 21.8047 12.3017 21.8047C12.5006 21.8047 12.6913 21.7257 12.832 21.585C12.9726 21.4444 13.0517 21.2536 13.0517 21.0547V11.9609C13.697 11.7957 14.2689 11.4204 14.6774 10.8942C15.0858 10.368 15.3075 9.72082 15.3075 9.05469C15.3075 8.38856 15.0858 7.74138 14.6774 7.21517C14.2689 6.68896 13.697 6.31366 13.0517 6.14844ZM12.3017 10.5547C12.005 10.5547 11.715 10.4667 11.4683 10.3019C11.2216 10.1371 11.0294 9.9028 10.9158 9.62871C10.8023 9.35462 10.7726 9.05302 10.8305 8.76205C10.8884 8.47108 11.0312 8.20381 11.241 7.99403C11.4508 7.78425 11.7181 7.64139 12.009 7.58351C12.3 7.52563 12.6016 7.55534 12.8757 7.66887C13.1498 7.7824 13.384 7.97466 13.5489 8.22133C13.7137 8.46801 13.8017 8.75802 13.8017 9.05469C13.8017 9.45251 13.6436 9.83404 13.3623 10.1153C13.081 10.3967 12.6995 10.5547 12.3017 10.5547ZM22.0517 16.5547C22.051 15.8896 21.8298 15.2435 21.4227 14.7176C21.0155 14.1917 20.4454 13.8156 19.8017 13.6484V4.55469C19.8017 4.35578 19.7226 4.16501 19.582 4.02436C19.4413 3.88371 19.2506 3.80469 19.0517 3.80469C18.8527 3.80469 18.662 3.88371 18.5213 4.02436C18.3807 4.16501 18.3017 4.35578 18.3017 4.55469V13.6484C17.6563 13.8137 17.0844 14.189 16.6759 14.7152C16.2675 15.2414 16.0458 15.8886 16.0458 16.5547C16.0458 17.2208 16.2675 17.868 16.6759 18.3942C17.0844 18.9204 17.6563 19.2957 18.3017 19.4609V21.0547C18.3017 21.2536 18.3807 21.4444 18.5213 21.585C18.662 21.7257 18.8527 21.8047 19.0517 21.8047C19.2506 21.8047 19.4413 21.7257 19.582 21.585C19.7226 21.4444 19.8017 21.2536 19.8017 21.0547V19.4609C20.4454 19.2937 21.0155 18.9177 21.4227 18.3918C21.8298 17.8659 22.051 17.2198 22.0517 16.5547ZM19.0517 18.0547C18.755 18.0547 18.465 17.9667 18.2183 17.8019C17.9716 17.6371 17.7794 17.4028 17.6658 17.1287C17.5523 16.8546 17.5226 16.553 17.5805 16.2621C17.6384 15.9711 17.7812 15.7038 17.991 15.494C18.2008 15.2842 18.4681 15.1414 18.759 15.0835C19.05 15.0256 19.3516 15.0553 19.6257 15.1689C19.8998 15.2824 20.134 15.4747 20.2989 15.7213C20.4637 15.968 20.5517 16.258 20.5517 16.5547C20.5517 16.9525 20.3936 17.334 20.1123 17.6153C19.831 17.8967 19.4495 18.0547 19.0517 18.0547Z" fill="#2B4360" />
                            </svg>
                        </div>
                    </div>

                    <Button variant="default" onClick={() => { setBookAppointmentModal(true) }}>
                        <div className="d-flex justify-content-center align-items-center gap-2">
                            <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 25 25" fill="none">
                                <path d="M19.8016 3.42969H17.9266V3.05469C17.9266 2.75632 17.8081 2.47017 17.5971 2.25919C17.3862 2.04821 17.1 1.92969 16.8016 1.92969C16.5033 1.92969 16.2171 2.04821 16.0061 2.25919C15.7952 2.47017 15.6766 2.75632 15.6766 3.05469V3.42969H8.92664V3.05469C8.92664 2.75632 8.80811 2.47017 8.59713 2.25919C8.38615 2.04821 8.1 1.92969 7.80164 1.92969C7.50327 1.92969 7.21712 2.04821 7.00614 2.25919C6.79516 2.47017 6.67664 2.75632 6.67664 3.05469V3.42969H4.80164C4.30435 3.42969 3.82744 3.62723 3.47581 3.97886C3.12418 4.33049 2.92664 4.80741 2.92664 5.30469V20.3047C2.92664 20.802 3.12418 21.2789 3.47581 21.6305C3.82744 21.9821 4.30435 22.1797 4.80164 22.1797H19.8016C20.2989 22.1797 20.7758 21.9821 21.1275 21.6305C21.4791 21.2789 21.6766 20.802 21.6766 20.3047V5.30469C21.6766 4.80741 21.4791 4.33049 21.1275 3.97886C20.7758 3.62723 20.2989 3.42969 19.8016 3.42969ZM6.67664 5.67969C6.67664 5.97806 6.79516 6.2642 7.00614 6.47518C7.21712 6.68616 7.50327 6.80469 7.80164 6.80469C8.1 6.80469 8.38615 6.68616 8.59713 6.47518C8.80811 6.2642 8.92664 5.97806 8.92664 5.67969H15.6766C15.6766 5.97806 15.7952 6.2642 16.0061 6.47518C16.2171 6.68616 16.5033 6.80469 16.8016 6.80469C17.1 6.80469 17.3862 6.68616 17.5971 6.47518C17.8081 6.2642 17.9266 5.97806 17.9266 5.67969H19.4266V7.92969H5.17664V5.67969H6.67664ZM5.17664 19.9297V10.1797H19.4266V19.9297H5.17664Z" fill="white" />
                            </svg>
                            Book Appointment
                        </div>

                    </Button>
                </div>
            </div>

            <div className="d-md-none d-sm-flex d-none flex-column align-items-sm-start align-items-center gap-3 mb-3">
                <div className="d-flex align-items-center justify-content-sm-start justify-content-center flex-wrap gap-3 w-100">
                    <div className="patient-header-search-width">
                        <InputFieldGroup
                            name="search"
                            type="text"
                            // value={formData.name}
                            // onChange={(e: React.ChangeEvent<HTMLInputElement>) => {
                            //     setSearchTerm(e.target.value); /
                            // }}
                            onBlur={(e: React.FocusEvent<HTMLInputElement>) => { }}
                            placeholder="search"
                            required={false}
                            disabled={false}
                            readOnly={false}
                            // error={formError.name}
                            className="position-relative blood-test-search patient-header-search w-100"
                        >
                            <div className="blood-test-search-icon">
                                <svg xmlns="http://www.w3.org/2000/svg" width="21" height="20" viewBox="0 0 21 20" fill="none">
                                    <path d="M18.5677 16.8364L14.8576 13.1246C15.97 11.675 16.4893 9.85652 16.3103 8.03804C16.1312 6.21956 15.2672 4.53728 13.8934 3.33245C12.5196 2.12762 10.7389 1.49047 8.91264 1.55024C7.08635 1.61001 5.35117 2.36223 4.05909 3.65431C2.76702 4.94638 2.0148 6.68156 1.95503 8.50785C1.89526 10.3341 2.53241 12.1148 3.73724 13.4886C4.94207 14.8624 6.62435 15.7264 8.44283 15.9055C10.2613 16.0846 12.0798 15.5652 13.5294 14.4528L17.2427 18.1668C17.3299 18.254 17.4335 18.3232 17.5474 18.3704C17.6613 18.4176 17.7835 18.4419 17.9068 18.4419C18.0301 18.4419 18.1522 18.4176 18.2662 18.3704C18.3801 18.3232 18.4836 18.254 18.5708 18.1668C18.658 18.0796 18.7272 17.9761 18.7744 17.8622C18.8216 17.7482 18.8459 17.6261 18.8459 17.5028C18.8459 17.3794 18.8216 17.2573 18.7744 17.1434C18.7272 17.0294 18.658 16.9259 18.5708 16.8387L18.5677 16.8364ZM3.84193 8.74965C3.84193 7.69894 4.15351 6.67182 4.73725 5.79818C5.321 4.92455 6.1507 4.24363 7.12143 3.84154C8.09216 3.43945 9.16033 3.33424 10.1909 3.53923C11.2214 3.74421 12.168 4.25018 12.9109 4.99314C13.6539 5.73611 14.1599 6.68271 14.3649 7.71323C14.5698 8.74376 14.4646 9.81192 14.0625 10.7827C13.6605 11.7534 12.9795 12.5831 12.1059 13.1668C11.2323 13.7506 10.2051 14.0621 9.15444 14.0621C7.74592 14.0607 6.3955 13.5005 5.39953 12.5046C4.40356 11.5086 3.84338 10.1582 3.84193 8.74965Z" fill="#B0B4C1" />
                                </svg>
                            </div>
                        </InputFieldGroup>
                    </div>
                    <Button variant="default" onClick={() => { setBookAppointmentModal(true) }} >
                        <div className="d-flex justify-content-center align-items-center gap-2">
                            <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 25 25" fill="none">
                                <path d="M19.8016 3.42969H17.9266V3.05469C17.9266 2.75632 17.8081 2.47017 17.5971 2.25919C17.3862 2.04821 17.1 1.92969 16.8016 1.92969C16.5033 1.92969 16.2171 2.04821 16.0061 2.25919C15.7952 2.47017 15.6766 2.75632 15.6766 3.05469V3.42969H8.92664V3.05469C8.92664 2.75632 8.80811 2.47017 8.59713 2.25919C8.38615 2.04821 8.1 1.92969 7.80164 1.92969C7.50327 1.92969 7.21712 2.04821 7.00614 2.25919C6.79516 2.47017 6.67664 2.75632 6.67664 3.05469V3.42969H4.80164C4.30435 3.42969 3.82744 3.62723 3.47581 3.97886C3.12418 4.33049 2.92664 4.80741 2.92664 5.30469V20.3047C2.92664 20.802 3.12418 21.2789 3.47581 21.6305C3.82744 21.9821 4.30435 22.1797 4.80164 22.1797H19.8016C20.2989 22.1797 20.7758 21.9821 21.1275 21.6305C21.4791 21.2789 21.6766 20.802 21.6766 20.3047V5.30469C21.6766 4.80741 21.4791 4.33049 21.1275 3.97886C20.7758 3.62723 20.2989 3.42969 19.8016 3.42969ZM6.67664 5.67969C6.67664 5.97806 6.79516 6.2642 7.00614 6.47518C7.21712 6.68616 7.50327 6.80469 7.80164 6.80469C8.1 6.80469 8.38615 6.68616 8.59713 6.47518C8.80811 6.2642 8.92664 5.97806 8.92664 5.67969H15.6766C15.6766 5.97806 15.7952 6.2642 16.0061 6.47518C16.2171 6.68616 16.5033 6.80469 16.8016 6.80469C17.1 6.80469 17.3862 6.68616 17.5971 6.47518C17.8081 6.2642 17.9266 5.97806 17.9266 5.67969H19.4266V7.92969H5.17664V5.67969H6.67664ZM5.17664 19.9297V10.1797H19.4266V19.9297H5.17664Z" fill="white" />
                            </svg>
                            Book Appointment
                        </div>
                    </Button>

                </div>
                <div className="d-flex flex-wrap align-items-center gap-3">
                    <span className="sort-by-lable">Sort by:</span>
                    <InputSelect
                        label=""
                        name="tests"
                        // value={formData.tests}
                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {
                            handleChange(e);
                        }}
                        onBlur={(e: React.FocusEvent<HTMLSelectElement>) => { }}
                        required={true}
                        disabled={false}
                        placeholder="All Time"
                        className="patient-header-select-filter"
                        // error={formError.tests}
                        options={[
                            { id: "1", value: "Today", label: "Today" },
                            { id: "2", value: "Yesterday", label: "Yesterday" },
                            { id: "3", value: "tomorrow", label: "tomorrow" },
                        ]}
                    />

                    <div className="patient-header-filter-icon-box ">
                        <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 25 25" fill="none">
                            <path d="M6.30166 10.6484V4.55469C6.30166 4.35578 6.22264 4.16501 6.08199 4.02436C5.94134 3.88371 5.75057 3.80469 5.55166 3.80469C5.35275 3.80469 5.16198 3.88371 5.02133 4.02436C4.88068 4.16501 4.80166 4.35578 4.80166 4.55469V10.6484C4.15635 10.8137 3.58438 11.189 3.17593 11.7152C2.76748 12.2414 2.54578 12.8886 2.54578 13.5547C2.54578 14.2208 2.76748 14.868 3.17593 15.3942C3.58438 15.9204 4.15635 16.2957 4.80166 16.4609V21.0547C4.80166 21.2536 4.88068 21.4444 5.02133 21.585C5.16198 21.7257 5.35275 21.8047 5.55166 21.8047C5.75057 21.8047 5.94134 21.7257 6.08199 21.585C6.22264 21.4444 6.30166 21.2536 6.30166 21.0547V16.4609C6.94697 16.2957 7.51894 15.9204 7.92739 15.3942C8.33584 14.868 8.55754 14.2208 8.55754 13.5547C8.55754 12.8886 8.33584 12.2414 7.92739 11.7152C7.51894 11.189 6.94697 10.8137 6.30166 10.6484ZM5.55166 15.0547C5.25499 15.0547 4.96498 14.9667 4.7183 14.8019C4.47163 14.6371 4.27937 14.4028 4.16584 14.1287C4.05231 13.8546 4.0226 13.553 4.08048 13.2621C4.13836 12.9711 4.28122 12.7038 4.491 12.494C4.70078 12.2842 4.96805 12.1414 5.25902 12.0835C5.54999 12.0256 5.8516 12.0553 6.12568 12.1689C6.39977 12.2824 6.63404 12.4747 6.79886 12.7213C6.96369 12.968 7.05166 13.258 7.05166 13.5547C7.05166 13.9525 6.89362 14.334 6.61232 14.6153C6.33101 14.8967 5.94948 15.0547 5.55166 15.0547ZM13.0517 6.14844V4.55469C13.0517 4.35578 12.9726 4.16501 12.832 4.02436C12.6913 3.88371 12.5006 3.80469 12.3017 3.80469C12.1027 3.80469 11.912 3.88371 11.7713 4.02436C11.6307 4.16501 11.5517 4.35578 11.5517 4.55469V6.14844C10.9063 6.31366 10.3344 6.68896 9.92593 7.21517C9.51748 7.74138 9.29578 8.38856 9.29578 9.05469C9.29578 9.72082 9.51748 10.368 9.92593 10.8942C10.3344 11.4204 10.9063 11.7957 11.5517 11.9609V21.0547C11.5517 21.2536 11.6307 21.4444 11.7713 21.585C11.912 21.7257 12.1027 21.8047 12.3017 21.8047C12.5006 21.8047 12.6913 21.7257 12.832 21.585C12.9726 21.4444 13.0517 21.2536 13.0517 21.0547V11.9609C13.697 11.7957 14.2689 11.4204 14.6774 10.8942C15.0858 10.368 15.3075 9.72082 15.3075 9.05469C15.3075 8.38856 15.0858 7.74138 14.6774 7.21517C14.2689 6.68896 13.697 6.31366 13.0517 6.14844ZM12.3017 10.5547C12.005 10.5547 11.715 10.4667 11.4683 10.3019C11.2216 10.1371 11.0294 9.9028 10.9158 9.62871C10.8023 9.35462 10.7726 9.05302 10.8305 8.76205C10.8884 8.47108 11.0312 8.20381 11.241 7.99403C11.4508 7.78425 11.7181 7.64139 12.009 7.58351C12.3 7.52563 12.6016 7.55534 12.8757 7.66887C13.1498 7.7824 13.384 7.97466 13.5489 8.22133C13.7137 8.46801 13.8017 8.75802 13.8017 9.05469C13.8017 9.45251 13.6436 9.83404 13.3623 10.1153C13.081 10.3967 12.6995 10.5547 12.3017 10.5547ZM22.0517 16.5547C22.051 15.8896 21.8298 15.2435 21.4227 14.7176C21.0155 14.1917 20.4454 13.8156 19.8017 13.6484V4.55469C19.8017 4.35578 19.7226 4.16501 19.582 4.02436C19.4413 3.88371 19.2506 3.80469 19.0517 3.80469C18.8527 3.80469 18.662 3.88371 18.5213 4.02436C18.3807 4.16501 18.3017 4.35578 18.3017 4.55469V13.6484C17.6563 13.8137 17.0844 14.189 16.6759 14.7152C16.2675 15.2414 16.0458 15.8886 16.0458 16.5547C16.0458 17.2208 16.2675 17.868 16.6759 18.3942C17.0844 18.9204 17.6563 19.2957 18.3017 19.4609V21.0547C18.3017 21.2536 18.3807 21.4444 18.5213 21.585C18.662 21.7257 18.8527 21.8047 19.0517 21.8047C19.2506 21.8047 19.4413 21.7257 19.582 21.585C19.7226 21.4444 19.8017 21.2536 19.8017 21.0547V19.4609C20.4454 19.2937 21.0155 18.9177 21.4227 18.3918C21.8298 17.8659 22.051 17.2198 22.0517 16.5547ZM19.0517 18.0547C18.755 18.0547 18.465 17.9667 18.2183 17.8019C17.9716 17.6371 17.7794 17.4028 17.6658 17.1287C17.5523 16.8546 17.5226 16.553 17.5805 16.2621C17.6384 15.9711 17.7812 15.7038 17.991 15.494C18.2008 15.2842 18.4681 15.1414 18.759 15.0835C19.05 15.0256 19.3516 15.0553 19.6257 15.1689C19.8998 15.2824 20.134 15.4747 20.2989 15.7213C20.4637 15.968 20.5517 16.258 20.5517 16.5547C20.5517 16.9525 20.3936 17.334 20.1123 17.6153C19.831 17.8967 19.4495 18.0547 19.0517 18.0547Z" fill="#2B4360" />
                        </svg>
                    </div>


                </div>

            </div>

            <>
                <Modal
                    show={BookAppointmentModal}
                    onHide={() => setBookAppointmentModal(false)}
                    header="Book Appointment"
                    closeButton={true}
                >
                    <BookAppointment
                        setBookAppointmentModal={setBookAppointmentModal}
                        setShowSuccessModalBook={setShowSuccessModalBook}
                    />
                </Modal>

                <SuccessModalBookAppointment
                    showSuccessModalBook={showSuccessModalBook}
                    setShowSuccessModalBook={setShowSuccessModalBook}
                />
                
            </>

            <BaseTable data={tableData} columns={columns} />

        </>
    );
};

export default PatientAppointment;